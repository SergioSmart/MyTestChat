@page "/"
@using Grpc.Core
@using MyTestChat.Protos

@inject Greeter.GreeterClient GreeterClient
@inject NavigationManager NavigationManager

@implements IDisposable

<div style="height: 80vh; width: 50vw;">  
    <div style="display: grid; grid-template-rows: 1fr auto; height: 100%">       
        <div style="grid-row: 1; overflow-y: auto; align-self: end; max-height: 100%">
            <ChatMessagesView Messages="_messages" />
        </div>  
        <div style="grid-row: 2">
            <RadzenTextArea Placeholder="Enter here..." Style="margin-bottom: 20px; width: 100%"/>
            <RadzenButton>Send</RadzenButton>
        </div>    
    </div>
</div>

@code
{
    private readonly List<string> _messages = new List<string>();
    private readonly CancellationTokenSource _cancelTokenSource = new CancellationTokenSource();  

    protected override async Task OnInitializedAsync()
    {
        NavigationManager.LocationChanged += NavigationManagerOnLocationChanged;
        var serverStream = GreeterClient.JoinChat(new HelloRequest(), cancellationToken: _cancelTokenSource.Token);
        var stream = serverStream.ResponseStream;

        try
        {
            await foreach (var message in stream.ReadAllAsync())
            {
                _messages.Add(message.Message);
                this.StateHasChanged();
            }
        }
        catch (Exception e)
        {
            _messages.Add(e.Message);
        } 
    }

    private void NavigationManagerOnLocationChanged(object sender, LocationChangedEventArgs e)
    {
        Dispose();
    }
    public void Dispose()
    {
        _cancelTokenSource.Cancel();
    }
}
